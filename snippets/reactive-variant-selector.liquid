{% liquid
  assign product_form_id = 'product-form-' | append: section.id
  assign selected_variant = product.selected_or_first_available_variant
%}

<style>
  [x-cloak] {
    display: none !important;
  }
</style>
<script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>

<div x-data>
  {% for option in product.options_with_values %}
    <h3>{{ option.name }}</h3>
    <div class="flex gap-3 !mb-6">
      {% for value in option.values %}
        <button
          {% if forloop.parentloop.first %}
          @click="$store.variantSelector.selectOption({{ forloop.parentloop.index }}, '{{ value | escape }}')"
          {% else %}
          x-show="$store.variantSelector.isOptionAvailable({{ forloop.parentloop.index }}, '{{ value | escape }}')"
          @click="$store.variantSelector.selectOption({{ forloop.parentloop.index }}, '{{ value | escape }}')"
          {% endif %}
          class="text-lg rounded-full px-5 py-2 border border-solid border-gray-200 cursor-pointer transition-colors"
          :class="'{{ value | escape }}' === $store.variantSelector.option{{ forloop.parentloop.index }} ? 'bg-black text-white' : 'hover:bg-gray-100'">
          {{ value }}
        </button>
      {% endfor %}
    </div>
  {% endfor %}
</div>

<div x-data x-cloak>
  <template x-if="$store.variantSelector.currentVariant">
    <div>
      <p class="text-2xl font-bold" x-text="$store.variantSelector.currentVariant.price"></p>
      <p
        x-show="$store.variantSelector.currentVariant.compare_at_price"
        class="text-lg line-through text-gray-500"
        x-text="$store.variantSelector.currentVariant.compare_at_price"></p>
      <input
        type="hidden"
        name="id"
        :value="$store.variantSelector.currentVariant.id">
    </div>
  </template>
</div>

<script>
  document.addEventListener('alpine:init', function() {
    Alpine.store('variantSelector', {
      {% for option in product.options_with_values %}
        {% assign option_key = 'option' | append: forloop.index %}
        option{{ forloop.index }}: "{{ selected_variant[option_key] | escape }}",
      {% endfor %}
      availableVariants: [
        {% for variant in product.variants %}
          {
            id: {{ variant.id }},
            available: {{ variant.available | json }},
            options: {{ variant.options | json }},
            price: "{{ variant.price | money }}",
            compare_at_price: "{{ variant.compare_at_price | money }}"
          }{% unless forloop.last %},{% endunless %}
        {% endfor %}
      ],
      
      get currentVariant() {
        return this.availableVariants.find(variant => {
          {% for option in product.options_with_values %}
            if (variant.options[{{ forloop.index0 }}] !== this.option{{ forloop.index }}) return false;
          {% endfor %}
          return true;
        });
      },
      
      isOptionAvailable(optionIndex, optionValue) {
        return this.availableVariants.some(variant => {
          if (variant.options[optionIndex - 1] !== optionValue) return false;
          
          {% for option in product.options_with_values %}
            if ({{ forloop.index }} < optionIndex) {
              if (variant.options[{{ forloop.index0 }}] !== this.option{{ forloop.index }}) {
                return false;
              }
            }
          {% endfor %}
          
          return true;
        });
      },
      
      selectOption(optionIndex, optionValue) {
        this['option' + optionIndex] = optionValue;
        
        // Check and auto-select unavailable subsequent options
        {% for option in product.options_with_values %}
          {% if forloop.index > 1 %}
            if (optionIndex < {{ forloop.index }}) {
              if (!this.isOptionAvailable({{ forloop.index }}, this.option{{ forloop.index }})) {
                const availableOptions = {{ option.values | json }}.filter(val => 
                  this.isOptionAvailable({{ forloop.index }}, val)
                );
                if (availableOptions.length > 0) {
                  this.option{{ forloop.index }} = availableOptions[0];
                }
              }
            }
          {% endif %}
        {% endfor %}
      }
    });
  });
</script>